{"version":3,"file":"admin.js","mappings":"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","sources":["webpack://gbcl-userip/webpack/bootstrap","webpack://gbcl-userip/webpack/runtime/compat get default export","webpack://gbcl-userip/webpack/runtime/define property getters","webpack://gbcl-userip/webpack/runtime/hasOwnProperty shorthand","webpack://gbcl-userip/webpack/runtime/make namespace object","webpack://gbcl-userip/external root \"flarum.core.compat['admin/app']\"","webpack://gbcl-userip/./node_modules/@babel/runtime/helpers/esm/extends.js","webpack://gbcl-userip/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://gbcl-userip/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://gbcl-userip/external root \"flarum.core.compat['admin/components/ExtensionPage']\"","webpack://gbcl-userip/external root \"flarum.core.compat['common/utils/extractText']\"","webpack://gbcl-userip/./src/utils/linkify.ts","webpack://gbcl-userip/external root \"flarum.core.compat['common/Model']\"","webpack://gbcl-userip/./src/forum/Model/IPInfo.ts","webpack://gbcl-userip/./src/admin/components/ExtensionSettingsPage.tsx","webpack://gbcl-userip/./src/admin/index.ts"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/app'];","export default function _extends() {\n  _extends = Object.assign ? Object.assign.bind() : function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n    return target;\n  };\n  return _extends.apply(this, arguments);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['admin/components/ExtensionPage'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/utils/extractText'];","const urlPattern =\n  /(?:https?:)?\\/\\/(?:(?:[\\w-]+\\.)+[\\w/#@~.-]*)(?:\\?(?:[\\w&=.!,;$#%-]+)?)?/gi;\n\nexport default (text: string) => text.replace(urlPattern, (url) => `<a href=\"${url}\" title=\"LINK\">${url}</a>`);\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport { NestedStringArray } from '@askvortsov/rich-icu-message-formatter'\nimport Model from 'flarum/common/Model'\n\nexport default class IPInfo extends Model {\n  countryCode = Model.attribute<NestedStringArray>('countryCode')\n  region = Model.attribute<NestedStringArray>('region')\n  isp = Model.attribute<NestedStringArray>('isp')\n  city = Model.attribute<NestedStringArray>('city')\n  province = Model.attribute<NestedStringArray>('province')\n  backboneIsp = Model.attribute<NestedStringArray>('backboneIsp')\n  areaCode = Model.attribute<NestedStringArray>('areaCode')\n  district = Model.attribute<NestedStringArray>('district')\n}\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport {NestedStringArray} from '@askvortsov/rich-icu-message-formatter'\nimport app from 'flarum/admin/app'\nimport ExtensionPage from 'flarum/admin/components/ExtensionPage'\nimport extractText from 'flarum/common/utils/extractText'\nimport linkify from '../../utils/linkify'\nimport type Mithril from 'mithril'\nimport IPInfo from '../../forum/Model/IPInfo'\n\ninterface ServiceData {\n  name: string\n}\n\nexport default class GeoIPSettingsPage extends ExtensionPage {\n  oninit(vnode: Mithril.Vnode<object, this>) {\n    super.oninit(vnode)\n  }\n\n  content(): JSX.Element {\n    const service = this.setting('gbcl-userip.service')()\n\n    const serviceAllAttrs = Object.keys(new IPInfo()).slice(4)\n    const serviceDataList = app.data['gbcl-userip.services'] as ServiceData[]\n    const options = serviceDataList.reduce(\n      (accumulator, currentPoint) => ({\n        ...accumulator,\n        ...{\n          [currentPoint.name]: app.translator.trans(\n            `gbcl-userip.admin.service.${currentPoint.name}.label`\n          ),\n        },\n      }),\n      {} as Record<string, NestedStringArray>\n    )\n    return (\n      <div className='container'>\n        <div className='selectGeoipApi'>\n          <div className='Form-group'>\n            {this.buildSettingComponent({\n              type: 'select',\n              setting: 'gbcl-userip.service',\n              label: app.translator.trans('gbcl-userip.admin.service.label'),\n              options: options,\n              required: true,\n              help:\n                service &&\n                m.trust(\n                  linkify(\n                    extractText(\n                      app.translator.trans(\n                        `gbcl-userip.admin.service.${service}.description`\n                      )\n                    )\n                  )\n                ),\n            })}\n          </div>\n          <div className='Form-group'>\n            {this.buildSettingComponent({\n              type: 'text',\n              setting: `gbcl-userip.badgeOptions`,\n              label: app.translator.trans(\n                'gbcl-userip.admin.service.badgeOptionsLabel'\n              ),\n              help: `${app.translator.trans('gbcl-userip.admin.service.options_label_help')} ${serviceAllAttrs.toString()}`,\n            })}\n\n            {this.buildSettingComponent({\n              type: 'text',\n              setting: `gbcl-userip.hoverOptions`,\n              label: app.translator.trans(\n                'gbcl-userip.admin.service.hoverOptionsLabel'\n              ),\n              help: `${app.translator.trans('gbcl-userip.admin.service.options_label_help')} ${serviceAllAttrs.toString()}`,\n            })}\n          </div>\n          {this.submitButton()}\n        </div>\n      </div>\n    )\n  }\n}\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/admin/app'\nimport GeoipSettingsPage from './components/ExtensionSettingsPage'\n\napp.initializers.add('gbcl/userip', () => {\n  app.extensionData\n    .for('gbcl-userip')\n    .registerPage(GeoipSettingsPage)\n    .registerPermission(\n      {\n        icon: 'fas fa-map-marked-alt',\n        label: app.translator.trans(\n          'gbcl-userip.admin.permissions.view_ip_info_label'\n        ),\n        permission: 'discussion.viewIpInfo',\n        allowGuest: true,\n      },\n      'view'\n    )\n})\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","_extends","assign","bind","target","i","arguments","length","source","apply","this","_setPrototypeOf","p","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","create","constructor","urlPattern","IPInfo","_Model","_this","_len","args","Array","_key","concat","countryCode","Model","region","isp","city","province","backboneIsp","areaCode","district","GeoIPSettingsPage","_ExtensionPage","_proto","oninit","vnode","content","text","service","setting","serviceAllAttrs","keys","slice","options","app","reduce","accumulator","currentPoint","_extends2","name","trans","m","className","buildSettingComponent","type","label","required","help","trust","extractText","replace","url","toString","submitButton","ExtensionPage","add","registerPage","GeoipSettingsPage","registerPermission","icon","permission","allowGuest"],"sourceRoot":""}