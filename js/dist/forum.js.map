{"version":3,"file":"forum.js","sources":["webpack://gbcl-userip/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js?4772","webpack://gbcl-userip/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js?1d5d","webpack://gbcl-userip/./src/forum/Model/IPInfo.ts","webpack://gbcl-userip/./src/forum/extend.ts","webpack://gbcl-userip/./src/forum/ProcessData.tsx","webpack://gbcl-userip/./src/forum/components/GeoIpToolBar.tsx","webpack://gbcl-userip/./src/forum/index.tsx"],"sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}","/*\r\n * This file is part of GBCLStudio Project.\r\n *\r\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\r\n *\r\n * For the full copyright and license information, please view the LICENSE.md\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport { NestedStringArray } from '@askvortsov/rich-icu-message-formatter'\r\nimport Model from 'flarum/common/Model'\r\n\r\nexport default class IPInfo extends Model {\r\n  countryCode = Model.attribute<NestedStringArray>('countryCode')\r\n  region = Model.attribute<NestedStringArray>('region')\r\n  isp = Model.attribute<NestedStringArray>('isp')\r\n}\r\n","/*\r\n * This file is part of GBCLStudio Project.\r\n *\r\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\r\n *\r\n * For the full copyright and license information, please view the LICENSE.md\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport Extend from 'flarum/common/extenders'\r\nimport Post from 'flarum/common/models/Post'\r\nimport ipinfo from './Model/IPInfo'\r\n\r\nexport default [\r\n  new Extend.Model(Post)\r\n    .hasOne<ipinfo>('userip_info')\r\n    .attribute<ipinfo>('userIpInfo'),\r\n\r\n  new Extend.Store().add('userip_info', ipinfo),\r\n]\r\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport { NestedStringArray } from '@askvortsov/rich-icu-message-formatter'\nimport ipinfo from './Model/IPInfo'\n\nexport type Data = {\n  code: NestedStringArray\n  region: NestedStringArray\n  isp: NestedStringArray\n} & Record<string, NestedStringArray>\n\nexport default class ProcessData {\n  private readonly data: Data\n\n  constructor(ipInfo: ipinfo) {\n    this.data = {\n      region: ipInfo.region(),\n      code: ipInfo.countryCode(),\n      isp: ipInfo.isp()\n    }\n  }\n\n  process(errorNotice: NestedStringArray) {\n    const elements = {} as Data\n    let errorCount = 0\n    \n    for (const [key, value] of Object.entries(this.data)) {\n      if (errorCount > 2) return false\n      errorCount = value ? errorCount : ++errorCount\n      elements[key] = value || errorNotice\n    }\n\n    return elements\n  }\n}\n","/*\r\n * This file is part of GBCLStudio Project.\r\n *\r\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\r\n *\r\n * For the full copyright and license information, please view the LICENSE.md\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport Component, { ComponentAttrs } from 'flarum/common/Component'\r\nimport { Data } from '../ProcessData'\r\n\r\nexport interface GeoIpBarAttrs extends ComponentAttrs {\r\n  elements: Data\r\n}\r\n\r\nexport default class GeoIpToolBar<\r\n  CustomAttrs extends GeoIpBarAttrs = GeoIpBarAttrs\r\n> extends Component<CustomAttrs> {\r\n  view() {\r\n    const { elements } = this.attrs\r\n    return (\r\n      <div className='userIp-container'>\r\n        <div className='ip-locate' id='info-country'>\r\n          {`${elements[\"region\"]}, ${elements[\"code\"]}`}\r\n        </div>\r\n        <div className='ip-locate' id='info-isp'>\r\n          {`${elements[\"isp\"]}`}\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","/*\r\n * This file is part of GBCLStudio Project.\r\n *\r\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\r\n *\r\n * For the full copyright and license information, please view the LICENSE.md\r\n * file that was distributed with this source code.\r\n */\r\n\r\nimport app from 'flarum/forum/app'\r\nimport { extend } from 'flarum/common/extend'\r\nimport CommentPost from 'flarum/forum/components/CommentPost'\r\nimport Model from 'flarum/common/Model'\r\nimport ProcessData from './ProcessData'\r\nimport GeoIpToolBar from './components/GeoIpToolBar'\r\n\r\n// still learning\r\nexport { default as extend } from './extend'\r\n\r\napp.initializers.add('gbcl/userip', () => {\r\n  const errorNotice = app.translator.trans('gbcl-userip.forum.unknownNotice')\r\n\r\n  app.store.models.posts.prototype.userIpInfo = Model.hasOne('userip_info')\r\n\r\n  extend(CommentPost.prototype, 'footerItems', function (items) {\r\n    const ipInfo = this.attrs.post.userIpInfo()\r\n    if (!ipInfo) return\r\n\r\n    const result = new ProcessData(ipInfo).process(errorNotice)\r\n    result && items.add('userIp', <GeoIpToolBar elements={result} />)\r\n  })\r\n})\r\n"],"names":["_inheritsLoose","subClass","superClass","prototype","Object","create","constructor","setPrototypeOf","_setPrototypeOf","o","p","bind","__proto__","IPInfo","Model","Extend","Post","hasOne","attribute","add","ipinfo","ProcessData","ipInfo","data","region","code","countryCode","isp","_proto","process","errorNotice","elements","errorCount","_i","_Object$entries","entries","length","_Object$entries$_i","key","value","GeoIpToolBar","_Component","apply","arguments","view","attrs","m","className","id","Component","app","extend","CommentPost","items","post","userIpInfo","result"],"mappings":"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"}