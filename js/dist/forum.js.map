{"version":3,"file":"forum.js","sources":["webpack://gbcl-userip/./src/forum/Model/IPInfo.ts","webpack://gbcl-userip/./src/forum/extend.ts","webpack://gbcl-userip/./src/forum/index.tsx"],"sourcesContent":["/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport { NestedStringArray } from '@askvortsov/rich-icu-message-formatter'\nimport Model from 'flarum/common/Model'\n\nexport default class IPInfo extends Model {\n  countryCode = Model.attribute<NestedStringArray>('countryCode')\n  region = Model.attribute<NestedStringArray>('region')\n  isp = Model.attribute<NestedStringArray>('isp')\n}\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport Extend from 'flarum/common/extenders'\nimport Post from 'flarum/common/models/Post'\nimport ipinfo from './Model/IPInfo'\n\nexport default [\n  new Extend.Model(Post)\n    .hasOne<ipinfo>('userip_info')\n    .attribute<ipinfo>('userIpInfo'),\n\n  new Extend.Store().add('userip_info', ipinfo),\n]\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/forum/app'\nimport { extend } from 'flarum/common/extend'\nimport CommentPost from 'flarum/forum/components/CommentPost'\nimport Model from 'flarum/common/Model'\nimport ProcessData from './ProcessData'\nimport GeoIpToolBar from './components/GeoIpToolBar'\n\n// still learning\nexport { default as extend } from './extend'\n\napp.initializers.add('gbcl/userip', () => {\n  const errorNotice = app.translator.trans('gbcl-userip.forum.unknownNotice')\n\n  app.store.models.posts.prototype.userIpInfo = Model.hasOne('userip_info')\n\n  extend(CommentPost.prototype, 'footerItems', function (items) {\n    const ipInfo = this.attrs.post.userIpInfo()\n    if (!ipInfo) return\n\n    const result = new ProcessData(ipInfo).process(errorNotice)\n    result && items.add('userIp', <GeoIpToolBar elements={result} />)\n  })\n})\n"],"names":["IPInfo","Model","NestedStringArray","Extend","Post","hasOne","ipinfo","attribute","add","app","errorNotice","extend","CommentPost","items","ipInfo","attrs","post","userIpInfo","result","ProcessData","process","GeoIpToolBar","elements"],"mappings":"wyBAYqBA,EAAN,Y,qHAAMA,EAAAA,G,+HAAAA,G,SAAAA,Q,2IAAAA,G,0BACnB,iRAAcC,AAAAA,IAAAA,SAAAA,CAAgBC,OAAAA,WAAAA,IAAAA,EAAAA,AAAAA,MAAAA,8DAAAA,OAAAA,EAAAA,IAAAA,CAAAA,mBAAAA,CAAAA,KAAmB,eACjD,4QAASD,AAAAA,IAAAA,SAAAA,CAAgBC,OAAAA,WAAAA,IAAAA,EAAAA,AAAAA,MAAAA,8DAAAA,OAAAA,EAAAA,IAAAA,CAAAA,mBAAAA,CAAAA,KAAmB,UAC5C,yQAAMD,AAAAA,IAAAA,SAAAA,CAAgBC,OAAAA,WAAAA,IAAAA,EAAAA,AAAAA,MAAAA,8DAAAA,OAAAA,EAAAA,IAAAA,CAAAA,mBAAAA,CAAAA,KAAmB,O,SAHtBF,C,EAAeC,I,k3ECCpC,KAAe,CACb,GAAIE,CAAAA,GAAAA,EAAAA,KAAAA,CAAaC,KACdC,MAAM,CAACC,EAAAA,CAAMA,CAAE,cACfC,SAAS,CAACD,EAAAA,CAAMA,CAAE,aAErB,GAAIH,CAAAA,GAAAA,EAAAA,KAAAA,GAAeK,GAAG,CAAC,cAAeF,EAAAA,CAAMA,EAC7C,A,0RCADG,IAAAA,YAAAA,CAAAA,GAAoB,CAAC,cAAe,WAClC,IAAMC,EAAcD,IAAAA,UAAAA,CAAAA,KAAoB,CAAC,kCAEzCA,CAAAA,IAAAA,KAAAA,CAAAA,MAAAA,CAAAA,KAAAA,CAAAA,SAAAA,CAAAA,UAAAA,CAA8CR,IAAAA,MAAY,CAAC,eAE3DU,AAAAA,CAAAA,EAAAA,EAAAA,MAAAA,AAAAA,EAAOC,IAAAA,SAAAA,CAAuB,cAAe,SAAUC,CAAK,EAC1D,IAAMC,EAAS,IAAI,CAACC,KAAK,CAACC,IAAI,CAACC,UAAU,GACzC,GAAKH,GAEL,IAAMI,EAAS,GAAIC,CAAAA,GAAAA,EAAYL,GAAQM,OAAO,CAACV,EAC/CQ,CAAAA,GAAUL,EAAML,GAAG,CAAC,SAAU,8GAACa,IAAYA,CAACC,SAAUJ,C,IACxD,EACF,E"}