{"version":3,"file":"forum.js","mappings":"MACA,IAAIA,EAAsB,CCA1BA,EAAyBC,IACxB,IAAIC,EAASD,GAAUA,EAAOE,WAC7B,IAAOF,EAAiB,QACxB,IAAM,EAEP,OADAD,EAAoBI,EAAEF,EAAQ,CAAEG,EAAGH,IAC5BA,CAAM,ECLdF,EAAwB,CAACM,EAASC,KACjC,IAAI,IAAIC,KAAOD,EACXP,EAAoBS,EAAEF,EAAYC,KAASR,EAAoBS,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAE1E,ECNDR,EAAwB,CAACc,EAAKC,IAAUL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,GCClFf,EAAyBM,IACH,oBAAXa,QAA0BA,OAAOC,aAC1CV,OAAOC,eAAeL,EAASa,OAAOC,YAAa,CAAEC,MAAO,WAE7DX,OAAOC,eAAeL,EAAS,aAAc,CAAEe,OAAO,GAAO,G,qDCL9D,MAAM,EAA+BC,OAAOC,KAAKC,OAAO,a,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,iBCAlD,EAA+BF,OAAOC,KAAKC,OAAO,gC,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,gB,aCkBnCC,EAAW,WAG9B,SAAAA,EAAYC,GAAgB,KAFpBC,UAAI,EAGVC,KAAKD,KAAO,CACVE,OAAQH,EAAOG,SACfC,KAAMJ,EAAOK,cACbC,IAAKN,EAAOM,MAEhB,CAaC,OAbAP,EAAAT,UAEDiB,QAAA,SAAQC,GAIN,IAHA,IAAMC,EAAW,CAAC,EACdC,EAAa,EAEjBC,EAAA,EAAAC,EAA2B5B,OAAO6B,QAAQX,KAAKD,MAAKU,EAAAC,EAAAE,OAAAH,IAAE,CAAjD,IAAAI,EAAAH,EAAAD,GAAO7B,EAAGiC,EAAA,GAAEpB,EAAKoB,EAAA,GACpB,GAAIL,EAAa,EAAG,OAAO,EAC3BA,EAAaf,EAAQe,IAAeA,EACpCD,EAAS3B,GAAOa,GAASa,CAC3B,CAEA,OAAOC,CACT,EAACV,CAAA,CAtB6B,GClBhC,SAASiB,EAAgBC,EAAGC,GAC1B,OAAOF,EAAkBhC,OAAOmC,eAAiBnC,OAAOmC,eAAeC,OAAS,SAAUH,EAAGC,GAC3F,OAAOD,EAAEI,UAAYH,EAAGD,CAC1B,EAAGD,EAAgBC,EAAGC,EACxB,CCHA,SAASI,EAAeL,EAAGlC,GACzBkC,EAAE3B,UAAYN,OAAOuC,OAAOxC,EAAEO,WAAY2B,EAAE3B,UAAUkC,YAAcP,EAAGE,EAAeF,EAAGlC,EAC3F,CCHA,MAAM,EAA+Ba,OAAOC,KAAKC,OAAO,oB,ICgBnC2B,EAAY,SAAAC,GAAA,SAAAD,IAAA,OAAAC,EAAAC,MAAA,KAAAC,YAAA,KAe9B,OAf8BN,EAAAG,EAAAC,GAAAD,EAAAnC,UAG/BuC,KAAA,WACE,IAAQpB,EAAaP,KAAK4B,MAAlBrB,SACR,OACEsB,EAAA,OAAKC,UAAU,oBACbD,EAAA,OAAKC,UAAU,YAAYC,GAAG,gBACxBxB,EAAiB,OAAC,KAAKA,EAAe,MAE5CsB,EAAA,OAAKC,UAAU,YAAYC,GAAG,YAAU,GAClCxB,EAAc,KAI1B,EAACgB,CAAA,CAf8B,C,MAEvBS,IClBV,MAAM,EAA+BtC,OAAOC,KAAKC,OAAO,oB,aCAxD,MAAM,EAA+BF,OAAOC,KAAKC,OAAO,sB,aCYnCqC,EAAM,SAAAC,GAAA,SAAAD,IAAA,QAAAE,EAAAC,EAAAV,UAAAd,OAAAyB,EAAA,IAAAC,MAAAF,GAAAG,EAAA,EAAAA,EAAAH,EAAAG,IAAAF,EAAAE,GAAAb,UAAAa,GAGsB,OAHtBJ,EAAAD,EAAA5C,KAAAmC,MAAAS,EAAA,OAAAM,OAAAH,KAAA,MACzBlC,YAAcsC,IAAAA,UAAmC,eAAcN,EAC/DlC,OAASwC,IAAAA,UAAmC,UAASN,EACrD/B,IAAMqC,IAAAA,UAAmC,OAAMN,CAAA,QAAAf,EAAAa,EAAAC,GAAAD,CAAA,CAHtB,CAASQ,KCCpC,SACE,IAAIC,IAAAA,OAAaC,KACdC,OAAe,eACfC,UAAkB,eAErB,IAAIH,IAAAA,QAAeI,IAAI,cAAeC,ICCxCC,IAAAA,aAAiBF,IAAI,eAAe,WAClC,IAAMxC,EAAc0C,IAAAA,WAAeC,MAAM,mCAEzCD,IAAAA,MAAUE,OAAOC,MAAM/D,UAAUgE,WAAaX,IAAAA,OAAa,gBAE3DY,EAAAA,EAAAA,QAAOC,IAAAA,UAAuB,eAAe,SAAUC,GACrD,IAAMzD,EAASE,KAAK4B,MAAM4B,KAAKJ,aAC/B,GAAKtD,EAAL,CAEA,IAAM2D,EAAS,IAAI5D,EAAYC,GAAQO,QAAQC,GAC/CmD,GAAUF,EAAMT,IAAI,SAAUjB,EAACN,EAAY,CAAChB,SAAUkD,IAHnC,CAIrB,GACF,G","sources":["webpack://gbcl-userip/webpack/bootstrap","webpack://gbcl-userip/webpack/runtime/compat get default export","webpack://gbcl-userip/webpack/runtime/define property getters","webpack://gbcl-userip/webpack/runtime/hasOwnProperty shorthand","webpack://gbcl-userip/webpack/runtime/make namespace object","webpack://gbcl-userip/external root \"flarum.core.compat['forum/app']\"","webpack://gbcl-userip/external root \"flarum.core.compat['common/extend']\"","webpack://gbcl-userip/external root \"flarum.core.compat['forum/components/CommentPost']\"","webpack://gbcl-userip/external root \"flarum.core.compat['common/Model']\"","webpack://gbcl-userip/./src/forum/ProcessData.tsx","webpack://gbcl-userip/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://gbcl-userip/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://gbcl-userip/external root \"flarum.core.compat['common/Component']\"","webpack://gbcl-userip/./src/forum/components/GeoIpToolBar.tsx","webpack://gbcl-userip/external root \"flarum.core.compat['common/extenders']\"","webpack://gbcl-userip/external root \"flarum.core.compat['common/models/Post']\"","webpack://gbcl-userip/./src/forum/Model/IPInfo.ts","webpack://gbcl-userip/./src/forum/extend.ts","webpack://gbcl-userip/./src/forum/index.tsx"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/app'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extend'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['forum/components/CommentPost'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Model'];","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport { NestedStringArray } from '@askvortsov/rich-icu-message-formatter'\nimport ipinfo from './Model/IPInfo'\n\nexport type Data = {\n  code: NestedStringArray\n  region: NestedStringArray\n  isp: NestedStringArray\n} & Record<string, NestedStringArray>\n\nexport default class ProcessData {\n  private data: Data\n\n  constructor(ipInfo: ipinfo) {\n    this.data = {\n      region: ipInfo.region(),\n      code: ipInfo.countryCode(),\n      isp: ipInfo.isp()\n    }\n  }\n\n  process(errorNotice: NestedStringArray) {\n    const elements = {} as Data\n    let errorCount = 0\n    \n    for (const [key, value] of Object.entries(this.data)) {\n      if (errorCount > 2) return false\n      errorCount = value ? errorCount : ++errorCount\n      elements[key] = value || errorNotice\n    }\n\n    return elements\n  }\n}\n","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/Component'];","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport Component, { ComponentAttrs } from 'flarum/common/Component'\nimport { Data } from '../ProcessData'\n\nexport interface GeoIpBarAttrs extends ComponentAttrs {\n  elements: Data\n}\n\nexport default class GeoIpToolBar<\n  CustomAttrs extends GeoIpBarAttrs = GeoIpBarAttrs\n> extends Component<CustomAttrs> {\n  view() {\n    const { elements } = this.attrs\n    return (\n      <div className='userIp-container'>\n        <div className='ip-locate' id='info-country'>\n          {`${elements[\"region\"]}, ${elements[\"code\"]}`}\n        </div>\n        <div className='ip-locate' id='info-isp'>\n          {`${elements[\"isp\"]}`}\n        </div>\n      </div>\n    )\n  }\n}\n","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/extenders'];","const __WEBPACK_NAMESPACE_OBJECT__ = flarum.core.compat['common/models/Post'];","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport { NestedStringArray } from '@askvortsov/rich-icu-message-formatter'\nimport Model from 'flarum/common/Model'\n\nexport default class IPInfo extends Model {\n  countryCode = Model.attribute<NestedStringArray>('countryCode')\n  region = Model.attribute<NestedStringArray>('region')\n  isp = Model.attribute<NestedStringArray>('isp')\n}\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport Extend from 'flarum/common/extenders'\nimport Post from 'flarum/common/models/Post'\nimport ipinfo from './Model/IPInfo'\n\nexport default [\n  new Extend.Model(Post)\n    .hasOne<ipinfo>('userip_info')\n    .attribute<ipinfo>('userIpInfo'),\n\n  new Extend.Store().add('userip_info', ipinfo),\n]\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/forum/app'\nimport { extend } from 'flarum/common/extend'\nimport CommentPost from 'flarum/forum/components/CommentPost'\nimport Model from 'flarum/common/Model'\nimport ProcessData from './ProcessData'\nimport GeoIpToolBar from './components/GeoIpToolBar'\n\n// still learning\nexport { default as extend } from './extend'\n\napp.initializers.add('gbcl/userip', () => {\n  const errorNotice = app.translator.trans('gbcl-userip.forum.unknownNotice')\n\n  app.store.models.posts.prototype.userIpInfo = Model.hasOne('userip_info')\n\n  extend(CommentPost.prototype, 'footerItems', function (items) {\n    const ipInfo = this.attrs.post.userIpInfo()\n    if (!ipInfo) return\n\n    const result = new ProcessData(ipInfo).process(errorNotice)\n    result && items.add('userIp', <GeoIpToolBar elements={result} />)\n  })\n})\n"],"names":["__webpack_require__","module","getter","__esModule","d","a","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","Symbol","toStringTag","value","flarum","core","compat","ProcessData","ipInfo","data","this","region","code","countryCode","isp","process","errorNotice","elements","errorCount","_i","_Object$entries","entries","length","_Object$entries$_i","_setPrototypeOf","t","e","setPrototypeOf","bind","__proto__","_inheritsLoose","create","constructor","GeoIpToolBar","_Component","apply","arguments","view","attrs","m","className","id","Component","IPInfo","_Model","_this","_len","args","Array","_key","concat","Model","Extend","Post","hasOne","attribute","add","ipinfo","app","trans","models","posts","userIpInfo","extend","CommentPost","items","post","result"],"sourceRoot":""}