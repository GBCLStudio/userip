{"version":3,"file":"forum.js","sources":["webpack://gbcl-userip/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js?4772","webpack://gbcl-userip/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js?1d5d","webpack://gbcl-userip/./src/forum/Model/IPInfo.ts","webpack://gbcl-userip/./src/forum/extend.ts","webpack://gbcl-userip/./src/forum/ProcessData.tsx","webpack://gbcl-userip/./src/forum/components/GeoIpToolBar.tsx","webpack://gbcl-userip/./src/forum/index.tsx"],"sourcesContent":["import setPrototypeOf from \"./setPrototypeOf.js\";\nfunction _inheritsLoose(t, o) {\n  t.prototype = Object.create(o.prototype), t.prototype.constructor = t, setPrototypeOf(t, o);\n}\nexport { _inheritsLoose as default };","function _setPrototypeOf(t, e) {\n  return _setPrototypeOf = Object.setPrototypeOf ? Object.setPrototypeOf.bind() : function (t, e) {\n    return t.__proto__ = e, t;\n  }, _setPrototypeOf(t, e);\n}\nexport { _setPrototypeOf as default };","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport { NestedStringArray } from '@askvortsov/rich-icu-message-formatter'\nimport Model from 'flarum/common/Model'\n\nexport default class IPInfo extends Model {\n  countryCode = Model.attribute<NestedStringArray>('countryCode')\n  region = Model.attribute<NestedStringArray>('region')\n  isp = Model.attribute<NestedStringArray>('isp')\n}\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport Extend from 'flarum/common/extenders'\nimport Post from 'flarum/common/models/Post'\nimport ipinfo from './Model/IPInfo'\n\nexport default [\n  new Extend.Model(Post)\n    .hasOne<ipinfo>('userip_info')\n    .attribute<ipinfo>('userIpInfo'),\n\n  new Extend.Store().add('userip_info', ipinfo),\n]\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport { NestedStringArray } from '@askvortsov/rich-icu-message-formatter'\nimport ipinfo from './Model/IPInfo'\n\nexport type Data = {\n  code: NestedStringArray\n  region: NestedStringArray\n  isp: NestedStringArray\n} & Record<string, NestedStringArray>\n\nexport default class ProcessData {\n  private readonly data: Data\n\n  constructor(ipInfo: ipinfo) {\n    this.data = {\n      region: ipInfo.region(),\n      code: ipInfo.countryCode(),\n      isp: ipInfo.isp()\n    }\n  }\n\n  process(errorNotice: NestedStringArray) {\n    const elements = {} as Data\n    let errorCount = 0\n    \n    for (const [key, value] of Object.entries(this.data)) {\n      if (errorCount > 2) return false\n      errorCount = value ? errorCount : ++errorCount\n      elements[key] = value || errorNotice\n    }\n\n    return elements\n  }\n}\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport Component, { ComponentAttrs } from 'flarum/common/Component'\nimport { Data } from '../ProcessData'\n\nexport interface GeoIpBarAttrs extends ComponentAttrs {\n  elements: Data\n}\n\nexport default class GeoIpToolBar<\n  CustomAttrs extends GeoIpBarAttrs = GeoIpBarAttrs\n> extends Component<CustomAttrs> {\n  view() {\n    const { elements } = this.attrs\n    return (\n      <div className='userIp-container'>\n        <div className='ip-locate' id='info-country'>\n          {`${elements[\"region\"]}, ${elements[\"code\"]}`}\n        </div>\n        <div className='ip-locate' id='info-isp'>\n          {`${elements[\"isp\"]}`}\n        </div>\n      </div>\n    )\n  }\n}\n","/*\n * This file is part of GBCLStudio Project.\n *\n * Copyright (c) 2023 GBCLStudio PHP Project Team.\n *\n * For the full copyright and license information, please view the LICENSE.md\n * file that was distributed with this source code.\n */\n\nimport app from 'flarum/forum/app'\nimport { extend } from 'flarum/common/extend'\nimport CommentPost from 'flarum/forum/components/CommentPost'\nimport Model from 'flarum/common/Model'\nimport ProcessData from './ProcessData'\nimport GeoIpToolBar from './components/GeoIpToolBar'\n\n// still learning\nexport { default as extend } from './extend'\n\napp.initializers.add('gbcl/userip', () => {\n  const errorNotice = app.translator.trans('gbcl-userip.forum.unknownNotice')\n\n  app.store.models.posts.prototype.userIpInfo = Model.hasOne('userip_info')\n\n  extend(CommentPost.prototype, 'footerItems', function (items) {\n    const ipInfo = this.attrs.post.userIpInfo()\n    if (!ipInfo) return\n\n    const result = new ProcessData(ipInfo).process(errorNotice)\n    result && items.add('userIp', <GeoIpToolBar elements={result} />)\n  })\n})\n"],"names":["_inheritsLoose","t","o","prototype","Object","create","constructor","setPrototypeOf","_setPrototypeOf","e","bind","__proto__","IPInfo","Model","Extend","Post","hasOne","attribute","add","ipinfo","ProcessData","ipInfo","data","region","code","countryCode","isp","_proto","process","errorNotice","elements","errorCount","_i","_Object$entries","entries","length","_Object$entries$_i","key","value","GeoIpToolBar","_Component","apply","arguments","view","attrs","m","className","id","Component","app","extend","CommentPost","items","post","userIpInfo","result"],"mappings":"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"}